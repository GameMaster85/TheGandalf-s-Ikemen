; Sean by Buckus

[Data]
life = 1000                ;Amount of life to start with
attack = 100               ;attack power (more is stronger)
defence = 100              ;defensive power (more is stronger)
fall.defence_up = 50       ;Percentage to increase defense everytime player is knocked down
liedown.time = 60          ;Time which player lies down for, before getting up
airjuggle = 15             ;Number of points for juggling
sparkno = s7000+(random%8)             ;Default hit spark number for HitDefs
guard.sparkno = s7050         ;Default guard spark number
KO.echo = 0                ;1 to enable echo on KO
volume = 255               ;Volume offset (negative for softer)
IntPersistIndex = 60
FloatPersistIndex = 40

[Size]
xscale = .97           ;Horizontal scaling factor.
yscale = 1           ;Vertical scaling factor.
ground.back = 18     ;Player width (back, ground)
ground.front = 18    ;Player width (front, ground)
air.back = 18        ;Player width (back, air)
air.front = 18       ;Player width (front, air)
height = 60          ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = 6, -92   ;Approximate position of head
mid.pos = -6, -60    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 3.7      ;Walk forward
walk.back = -3.2     ;Walk backward
run.fwd  = 6.1, 0    ;Run forward (x, y)
run.back = -13,0 ;Hop backward (x, y)
jump.neu = 0,-10    ;Neutral jumping velocity (x, y)
jump.back = -3.3    ;Jump back Speed (x, y)
jump.fwd = 3.3       ;Jump forward Speed (x, y)
runjump.back = -4.5,-10 ;Running jump speeds (opt)
runjump.fwd = 4.5,-10      ;.

[Movement]
airjump.num = 0      ;Number of air jumps allowed (opt)
airjump.height = 0  ;Minimum distance from ground before you can air jump (opt)
yaccel = .5         ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .85 ;Friction coefficient when crouching

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).


;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
; CNS ƒŒƒxƒ‹: Šî–{
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

